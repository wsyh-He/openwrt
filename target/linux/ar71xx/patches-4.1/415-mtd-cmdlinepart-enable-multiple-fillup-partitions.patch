--- a/drivers/mtd/cmdlinepart.c
+++ b/drivers/mtd/cmdlinepart.c
@@ -98,7 +98,8 @@ static struct mtd_partition * newpart(ch
 				      int *num_parts,
 				      int this_part,
 				      unsigned char **extra_mem_ptr,
-				      int extra_mem_size)
+				      int extra_mem_size,
+				      int offset_needed)
 {
 	struct mtd_partition *parts;
 	unsigned long long size, offset = OFFSET_CONTINUOUS;
@@ -167,15 +168,22 @@ static struct mtd_partition * newpart(ch
 		s += 2;
 	}
 
-	/* test if more partitions are following */
-	if (*s == ',') {
-		if (size == SIZE_REMAINING) {
-			printk(KERN_ERR ERRP "no partitions allowed after a fill-up partition\n");
+	/* check if offset is required */
+	if (offset_needed) {
+		if (offset == OFFSET_CONTINUOUS) {
+			printk(KERN_ERR ERRP "offset required after a fill-up partition\n");
 			return ERR_PTR(-EINVAL);
 		}
+	}
+
+	/* test if more partitions are following */
+	if (*s == ',') {
+		if (size == SIZE_REMAINING)
+			offset_needed = 1;
+
 		/* more partitions follow, parse them */
 		parts = newpart(s + 1, &s, num_parts, this_part + 1,
-				&extra_mem, extra_mem_size);
+				&extra_mem, extra_mem_size, offset_needed);
 		if (IS_ERR(parts))
 			return parts;
 	} else {
@@ -254,7 +262,8 @@ static int mtdpart_setup_real(char *s)
 				0,		/* first partition */
 				(unsigned char**)&this_mtd, /* out: extra mem */
 				mtd_id_len + 1 + sizeof(*this_mtd) +
-				sizeof(void*)-1 /*alignment*/);
+				sizeof(void*)-1, /*alignment*/
+				0 /* offset_needed */);
 		if (IS_ERR(parts)) {
 			/*
 			 * An error occurred. We're either:
